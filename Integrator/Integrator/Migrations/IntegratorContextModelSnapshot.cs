// <auto-generated />
using System;
using Integrator;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Integrator.Migrations
{
    [DbContext(typeof(IntegratorContext))]
    partial class IntegratorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("Integrator.Features.Settings.Models.Setting", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Integrator.Features.Widgets.Models.Option", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Key")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.Property<string>("WidgetId")
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("WidgetId");

                    b.ToTable("Option");
                });

            modelBuilder.Entity("Integrator.Features.Widgets.Models.Widget", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Widgets");

                    b.HasData(
                        new
                        {
                            Id = "a0cd214b-2067-47fc-9eaa-d3ac4b4f0353",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Timesmart",
                            Type = 1,
                            Url = "http://api.timesmart.tech:5000/TimeSmart/InsertRegistration"
                        },
                        new
                        {
                            Id = "78iu214b-2067-47fc-9eaa-d3ac4b4f0352",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Timesmart Registrations",
                            Type = 2,
                            Url = "http://api.timesmart.tech:5000/TimeSmart/GetCategories"
                        },
                        new
                        {
                            Id = "hy67214b-2067-47fc-9eaa-d3ac4b4f0351",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "SAP List",
                            Type = 0,
                            Url = "http://app.timesmart.tech/api/sap"
                        });
                });

            modelBuilder.Entity("Integrator.Features.Workspaces.Models.Workspace", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Workspaces");
                });

            modelBuilder.Entity("Integrator.Features.Workspaces.Models.WorkspaceWidget", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("WidgetId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("WorkspaceId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("WidgetId");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("WorkspaceWidgets");
                });

            modelBuilder.Entity("Integrator.Features.Widgets.Models.Option", b =>
                {
                    b.HasOne("Integrator.Features.Widgets.Models.Widget", null)
                        .WithMany("Options")
                        .HasForeignKey("WidgetId");
                });

            modelBuilder.Entity("Integrator.Features.Workspaces.Models.WorkspaceWidget", b =>
                {
                    b.HasOne("Integrator.Features.Widgets.Models.Widget", "Widget")
                        .WithMany()
                        .HasForeignKey("WidgetId");

                    b.HasOne("Integrator.Features.Workspaces.Models.Workspace", "Workspace")
                        .WithMany("Widgets")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Widget");

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("Integrator.Features.Widgets.Models.Widget", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("Integrator.Features.Workspaces.Models.Workspace", b =>
                {
                    b.Navigation("Widgets");
                });
#pragma warning restore 612, 618
        }
    }
}
